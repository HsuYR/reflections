What happens when you initialize a repository? Why do you need to do it?
It creates the essential .git folder to store the history of the files.
I think I only need to initialize a repository
when I am going to use git to track my files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area is like a buffer that stores files ready to be committed.
I think it can also act as a checklist for me to see what files haven't yet changed.

How can you use the staging area to make sure you have one commit per logical change?
I can compare the files in the staging area with the latest commit
and make sure that the changes belong the the same logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
I could use branches like folders to store the codes changed for a particular purpose.
Whenever I need to look for some old codes,
it will be easier to find in a certain branch rather than going through the entire master branch.

How do the diagrams help you visualize the branch structure?
It help me sees the branching points and further commits more clearly.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The codes are merged together when merging two branches.
Showing commits in the diagram view let us easily find the last commit of the merged branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Auto merging makes it more efficient when only simple changes are made,
while manual merging leaves the decision of more complex changes to the user.
